// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go

// Package mock_usecases is a generated GoMock package.
package mock_usecases

import (
	reflect "reflect"

	entities "awcoding.com/back/pkg/domain/entities"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthCases is a mock of AuthCases interface.
type MockAuthCases struct {
	ctrl     *gomock.Controller
	recorder *MockAuthCasesMockRecorder
}

// MockAuthCasesMockRecorder is the mock recorder for MockAuthCases.
type MockAuthCasesMockRecorder struct {
	mock *MockAuthCases
}

// NewMockAuthCases creates a new mock instance.
func NewMockAuthCases(ctrl *gomock.Controller) *MockAuthCases {
	mock := &MockAuthCases{ctrl: ctrl}
	mock.recorder = &MockAuthCasesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthCases) EXPECT() *MockAuthCasesMockRecorder {
	return m.recorder
}

// GetByToken mocks base method.
func (m *MockAuthCases) GetByToken(token string) (*entities.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByToken", token)
	ret0, _ := ret[0].(*entities.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByToken indicates an expected call of GetByToken.
func (mr *MockAuthCasesMockRecorder) GetByToken(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByToken", reflect.TypeOf((*MockAuthCases)(nil).GetByToken), token)
}

// SignIn mocks base method.
func (m *MockAuthCases) SignIn(login, password string) (*entities.Auth, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignIn", login, password)
	ret0, _ := ret[0].(*entities.Auth)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignIn indicates an expected call of SignIn.
func (mr *MockAuthCasesMockRecorder) SignIn(login, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignIn", reflect.TypeOf((*MockAuthCases)(nil).SignIn), login, password)
}
